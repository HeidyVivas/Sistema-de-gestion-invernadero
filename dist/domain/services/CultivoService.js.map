{"version":3,"file":"CultivoService.js","sourceRoot":"","sources":["../../../src/domain/services/CultivoService.ts"],"names":[],"mappings":"AAIA,MAAM,OAAO,cAAc;IACzB,YAAoB,WAAiC;QAAjC,gBAAW,GAAX,WAAW,CAAsB;IAAG,CAAC;IAEzD,YAAY,CAAC,OAAgB;QAC3B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IACpC,CAAC;IAED,qBAAqB,CAAC,SAAiB,EAAE,MAAc;QACrD,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACrD,IAAI,CAAC,OAAO;YAAE,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;QACvD,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;CACF","sourcesContent":["import { Cultivo } from \"../entities/Cultivo.js\";\r\nimport { Planta } from \"../entities/Planta.js\";\r\nimport { IRepository } from \"repositories/IRepository.js\";\r\n\r\nexport class CultivoService {\r\n  constructor(private cultivoRepo: IRepository<Cultivo>) {}\r\n\r\n  crearCultivo(cultivo: Cultivo): void {\r\n    this.cultivoRepo.create(cultivo);\r\n  }\r\n\r\n  listarCultivos(): Cultivo[] {\r\n    return this.cultivoRepo.findAll();\r\n  }\r\n\r\n  agregarPlantaACultivo(cultivoId: number, planta: Planta): void {\r\n    const cultivo = this.cultivoRepo.findById(cultivoId);\r\n    if (!cultivo) throw new Error(\"Cultivo no encontrado\");\r\n    cultivo.agregarPlanta(planta);\r\n  }\r\n}"]}