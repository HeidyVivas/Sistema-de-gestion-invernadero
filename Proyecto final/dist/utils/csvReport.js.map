{"version":3,"file":"csvReport.js","sourceRoot":"","sources":["../../src/utils/csvReport.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,IAAI,CAAC;AAEpB,MAAM,UAAU,UAAU,CAAC,aAAqB,EAAE,KAAY;IAC5D,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO;IAE/B,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAChD,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvE,MAAM,GAAG,GAAG,OAAO,GAAG,IAAI,GAAG,IAAI,CAAC;IAElC,EAAE,CAAC,aAAa,CAAC,aAAa,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;AAChD,CAAC","sourcesContent":["import fs from \"fs\";\n\nexport function generarCSV(nombreArchivo: string, datos: any[]): void {\n  if (datos.length === 0) return;\n\n  const headers = Object.keys(datos[0]).join(\",\");\n  const rows = datos.map(obj => Object.values(obj).join(\",\")).join(\"\\n\");\n  const csv = headers + \"\\n\" + rows;\n\n  fs.writeFileSync(nombreArchivo, csv, \"utf-8\");\n}"]}