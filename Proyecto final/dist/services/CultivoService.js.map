{"version":3,"file":"CultivoService.js","sourceRoot":"","sources":["../../src/services/CultivoService.ts"],"names":[],"mappings":"AAIA,MAAM,OAAO,cAAc;IACzB,YAAoB,WAAiC;QAAjC,gBAAW,GAAX,WAAW,CAAsB;IAAG,CAAC;IAEzD,YAAY,CAAC,OAAgB;QAC3B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IACpC,CAAC;IAED,qBAAqB,CAAC,SAAiB,EAAE,MAAc;QACrD,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACrD,IAAI,CAAC,OAAO;YAAE,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;QACvD,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;CACF","sourcesContent":["import { Cultivo } from \"../domain/entities/Cultivo.js\";\nimport { Planta } from \"../domain/entities/Planta.js\";\nimport { IRepository } from \"../repositories/IRepository.js\";\n\nexport class CultivoService {\n  constructor(private cultivoRepo: IRepository<Cultivo>) {}\n\n  crearCultivo(cultivo: Cultivo): void {\n    this.cultivoRepo.create(cultivo);\n  }\n\n  listarCultivos(): Cultivo[] {\n    return this.cultivoRepo.findAll();\n  }\n\n  agregarPlantaACultivo(cultivoId: number, planta: Planta): void {\n    const cultivo = this.cultivoRepo.findById(cultivoId);\n    if (!cultivo) throw new Error(\"Cultivo no encontrado\");\n    cultivo.agregarPlanta(planta);\n  }\n}"]}